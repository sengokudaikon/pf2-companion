openapi: "3.0.3"
info:
  title: "pf2_companion_backend API"
  description: "pf2_companion_backend API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8083"
  - url: "https://pf2-companion.up.railway.app"
paths:
  /metrics-http:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MetricSnapshot"
  /metrics-micrometer:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /api/actions/{id}:
    get:
      tags:
        - "Action"
      description: "Action by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/actions/list/{page}/{size}:
    get:
      tags:
        - "Action"
      description: "Action list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/actions/name/{name}:
    get:
      tags:
        - "Action"
      description: "Action by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/ancestry/{id}:
    get:
      tags:
        - "Ancestry"
      description: "Ancestry by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/ancestry/list/{page}/{size}:
    get:
      tags:
        - "Ancestry"
      description: "Ancestry list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/ancestry/name/{name}:
    get:
      tags:
        - "Ancestry"
      description: "Ancestry by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/auth/doesEmailExist:
    get:
      tags:
        - "Auth"
      description: "Is email registered"
      parameters:
      - name: "email"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
    options:
      tags:
        - "Auth"
      description: ""
      parameters:
      - name: "email"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "object"
  /api/auth/doesUserExist:
    get:
      tags:
        - "Auth"
      description: "Is user registered"
      parameters:
      - name: "identifier"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
    options:
      tags:
        - "Auth"
      description: ""
      parameters:
      - name: "identifier"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "object"
  /api/auth/register:
    post:
      tags:
        - "Auth"
      description: "Register"
      parameters:
      - name: "email"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "uid"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "role"
        in: "query"
        required: false
        schema:
          type: "object"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema: {}
  /api/background/{id}:
    get:
      tags:
        - "Background"
      description: "Background by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/background/list/{page}/{size}:
    get:
      tags:
        - "Background"
      description: "Background list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/background/name/{name}:
    get:
      tags:
        - "Background"
      description: "Background by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/character/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Character"
      description: "Character by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
                Example#2:
                  value: "Resource requires authentication."
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
  /api/character/list/{page}/{size}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Character"
      description: "Character list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
                Example#2:
                  value: "Resource requires authentication."
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/class/{id}:
    get:
      tags:
        - "Class"
      description: "Class by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/class/list/{page}/{size}:
    get:
      tags:
        - "Class"
      description: "Class list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/class/name/{name}:
    get:
      tags:
        - "Class"
      description: "Class by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/classfeats/{name}:
    get:
      tags:
        - "Class"
        - "Feat"
      description: "Class feat by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/classfeats/{page}/{size}:
    get:
      tags:
        - "Class"
        - "Feat"
      description: "Class feat list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/armor/list/{page}/{size}:
    get:
      tags:
        - "Equipment"
        - "Armor"
      description: "Armor list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/armor/name/{name}:
    get:
      tags:
        - "Equipment"
        - "Armor"
      description: "Armor by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/list/{page}/{size}:
    get:
      tags:
        - "Equipment"
      description: "Equipment list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/name/{name}:
    get:
      tags:
        - "Equipment"
      description: "Equipment by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/shield/list/{page}/{size}:
    get:
      tags:
        - "Equipment"
        - "Shield"
      description: "Shield list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/shield/name/{name}:
    get:
      tags:
        - "Equipment"
        - "Shield"
      description: "Shield by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/weapon/list/{page}/{size}:
    get:
      tags:
        - "Equipment"
        - "Weapon"
      description: "Weapon list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/weapon/name/{name}:
    get:
      tags:
        - "Equipment"
        - "Weapon"
      description: "Weapon by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/general/{id}:
    get:
      tags:
        - "Feat"
      description: "General feat by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/general/list/{page}/{size}:
    get:
      tags:
        - "Feat"
      description: "General feat list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/general/name/{name}:
    get:
      tags:
        - "Feat"
      description: "General feat by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/health:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Healthy"
  /api/heritage/{id}:
    get:
      tags:
        - "Heritage"
      description: "Heritage by id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/heritage/list/{page}/{size}:
    get:
      tags:
        - "Heritage"
      description: "Heritage list"
      parameters:
      - name: "page"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/heritage/name/{name}:
    get:
      tags:
        - "Heritage"
      description: "Heritage by name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_? extends Model"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/search:
    post:
      tags:
        - "Search"
      description: "API search"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchQuery"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SearchResult"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
components:
  schemas:
    MetricSnapshot:
      type: "object"
      properties:
        name:
          type: "string"
        value:
          type: "number"
          format: "double"
      required:
      - "name"
    Response:
      type: "object"
      properties: {}
    Response_? extends Model:
      type: "object"
    Create:
      type: "object"
      properties:
        email:
          type: "string"
        username:
          type: "string"
        uid:
          type: "string"
        role:
          type: "string"
          enum:
          - "USER"
          - "GAMEMASTER"
          - "ADMIN"
          - "OWNER"
      required:
      - "email"
      - "username"
      - "uid"
      - "role"
    StackTraceElement:
      type: "object"
      properties:
        classLoaderName:
          type: "string"
        moduleName:
          type: "string"
        moduleVersion:
          type: "string"
        methodName:
          type: "string"
        fileName:
          type: "string"
        lineNumber:
          type: "integer"
          format: "int32"
    Throwable:
      type: "object"
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: "array"
          items:
            $ref: "#/components/schemas/StackTraceElement"
    Invalid:
      type: "object"
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: "array"
          items:
            $ref: "#/components/schemas/StackTraceElement"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"
    SearchQuery:
      type: "object"
      properties:
        query:
          type: "string"
    SearchResult:
      type: "object"
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
        description:
          type: "string"