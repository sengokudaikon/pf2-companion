openapi: "3.0.3"
info:
  title: "pf2_companion_backend API"
  description: "pf2_companion_backend API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8083"
  - url: "https://pf2-companion.up.railway.app"
paths:
  /metrics-http:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MetricSnapshot"
  /metrics-micrometer:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /api/action:
    get:
      tags:
        - "Action"
      description: "Action by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/action/{id}:
    get:
      tags:
        - "Action"
      description: "Action by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/actions:
    get:
      tags:
        - "Action"
      description: "Actions"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ActionResponse"
  /api/ancestries:
    get:
      tags:
        - "Ancestry"
      description: "Ancestries"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/ancestry:
    get:
      tags:
        - "Ancestry"
      description: "Ancestry by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AncestryResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/ancestry/{id}:
    get:
      tags:
        - "Ancestry"
      description: "Ancestry by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AncestryResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/auth:
    post:
      tags:
        - "Auth"
      description: "Register"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema: {}
  /api/auth/doesEmailExist:
    get:
      tags:
        - "Auth"
      description: "Does email exist"
      parameters:
      - name: "email"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
    options:
      tags:
        - "Auth"
      description: ""
      parameters:
      - name: "email"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "object"
  /api/auth/doesUserExist:
    get:
      tags:
        - "Auth"
      description: "Does user exist"
      parameters:
      - name: "identifier"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
    options:
      tags:
        - "Auth"
      description: ""
      parameters:
      - name: "identifier"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "object"
  /api/background:
    get:
      tags:
        - "Background"
      description: "Background by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/background/{id}:
    get:
      tags:
        - "Background"
      description: "Background by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/backgrounds:
    get:
      tags:
        - "Background"
      description: "Backgrounds"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/character/{id}:
    get:
      tags:
        - "Character"
      description: "Character by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
                Example#2:
                  value: "Resource requires authentication."
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /api/characters:
    get:
      tags:
        - "Character"
      description: "Characters"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
                Example#2:
                  value: "Resource requires authentication."
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/class:
    get:
      tags:
        - "Class"
      description: "Class by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/class/{id}:
    get:
      tags:
        - "Class"
      description: "Class by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/classes:
    get:
      tags:
        - "Class"
      description: "Classes"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/classfeat:
    get:
      description: "Class Feature by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/classfeat/{id}:
    get:
      description: "Class Feature by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/classfeats:
    get:
      description: "Class Features"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FeatureResponse"
  /api/equipment:
    get:
      tags:
        - "Equipment"
      description: "Equipment by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/armor:
    get:
      tags:
        - "Equipment"
        - "Armor"
      description: "Armor by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/armors:
    get:
      tags:
        - "Equipment"
        - "Armor"
      description: "Armors"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/equipment/shield:
    get:
      tags:
        - "Equipment"
        - "Shield"
      description: "Shield by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/shields:
    get:
      tags:
        - "Equipment"
        - "Shield"
      description: "Shields"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/equipment/weapon:
    get:
      tags:
        - "Equipment"
        - "Weapon"
      description: "Weapon by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/equipment/weapons:
    get:
      tags:
        - "Equipment"
        - "Weapon"
      description: "Weapons"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/equipments:
    get:
      tags:
        - "Equipment"
      description: "Equipment"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Response"
  /api/feats/skill:
    get:
      tags:
        - "Feat"
      description: "Skill Feat by Name"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/general:
    get:
      tags:
        - "Feat"
      description: "General Feat by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/skill/{id}:
    get:
      tags:
        - "Feat"
      description: "Skill Feat by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/general/{id}:
    get:
      tags:
        - "Feat"
      description: "General Feat by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/feats/skills:
    get:
      tags:
        - "Feat"
      description: "Skill Feats"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
        - name: "size"
          in: "query"
          required: true
          schema:
            type: "integer"
        - name: "filters"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "sort"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "skillName"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "skillProficiency"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FeatureResponse"
  /api/feats/generals:
    get:
      tags:
        - "Feat"
      description: "General Feats"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FeatureResponse"
  /api/health:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Healthy"
  /api/heritage:
    get:
      tags:
        - "Heritage"
      description: "Heritage by Name"
      parameters:
      - name: "name"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeritageResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/heritage/{id}:
    get:
      tags:
        - "Heritage"
      description: "Heritage by ID"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeritageResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
  /api/heritages:
    get:
      tags:
        - "Heritage"
      description: "Heritages"
      parameters:
      - name: "page"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "size"
        in: "query"
        required: true
        schema:
          type: "integer"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/HeritageResponse"
  /api/search:
    get:
      tags:
        - "Search"
      description: "Search"
      parameters:
      - name: "query"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "filters"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SearchResult"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
components:
  schemas:
    MetricSnapshot:
      type: "object"
      properties:
        name:
          type: "string"
        value:
          type: "number"
          format: "double"
      required:
      - "name"
    Publication:
      type: "object"
      properties:
        license:
          type: "string"
        remaster:
          type: "boolean"
        title:
          type: "string"
    Response:
      type: object
      properties: {}
    Effect:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: {}
          nullable: true
    BackgroundResponse:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: { }
          nullable: true
        feats:
          type: array
          items:
            $ref: "#/components/schemas/FeatureResponse"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionResponse"
    ActionResponse:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: {}
          nullable: true
        selfEffect:
          $ref: "#/components/schemas/Effect"
        actionType:
          type: object
          properties: {}
          nullable: true
        actions:
          type: object
          properties: {}
          nullable: true
        category:
          type: "string"
        frequency:
          type: "string"
        trigger:
          type: object
          properties: {}
          nullable: true
        weapon:
          type: object
          properties: {}
          nullable: true
        badge:
          type: object
          properties: {}
          nullable: true
        duration:
          type: object
          properties: {}
          nullable: true
        level:
          type: "integer"
          format: "int32"
        start:
          type: object
          properties: {}
          nullable: true
        tokenIcon:
          type: object
          properties:
            show:
              type: "boolean"
    AncestryResponse:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: {}
          nullable: true
        boosts:
          type: string
        flaws:
          type: string
        hp:
          type: "integer"
          format: "int32"
        languages:
          type: object
          properties:
            count:
              type: "integer"
              format: "int32"
            custom:
              type: string
            value:
              type: array
              items:
                type: string
        additionalLanguages:
          type: object
          properties:
            count:
              type: "integer"
              format: "int32"
            custom:
              type: string
            value:
              type: array
              items:
                type: string
        reach:
          type: "integer"
          format: "int32"
        size:
          type: string
        vision:
          type: string
        additionalSense:
          type: string
          nullable: true
        ancestryFeatures:
          type: array
          items:
            $ref: "#/components/schemas/FeatureResponse"
        heritages:
          type: array
          items:
            $ref: "#/components/schemas/HeritageResponse"
    HeritageResponse:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: {}
          nullable: true
        ancestryId:
          type: "string"
    FeatureResponse:
      type: object
      properties:
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type_:
          type: "string"
        rarity:
          type: "string"
        description:
          type: "string"
        publication:
          $ref: "#/components/schemas/Publication"
        traits:
          type: array
          items:
            type: string
        rules:
          type: object
          properties: {}
          nullable: true
        frequency:
          type: "string"
        actionType:
          type: object
          properties: {}
          nullable: true
        actions:
          type: object
          properties: {}
          nullable: true
        category:
          type: "string"
        maxTakable:
          type: string
          nullable: true
        prerequisites:
          type: object
          properties: {}
        trigger:
          type: string
          nullable: true
        effects:
          type: array
          items:
            $ref: "#/components/schemas/Effect"
    StackTraceElement:
      type: "object"
      properties:
        classLoaderName:
          type: "string"
        moduleName:
          type: "string"
        moduleVersion:
          type: "string"
        methodName:
          type: "string"
        fileName:
          type: "string"
        lineNumber:
          type: "integer"
          format: "int32"
    Throwable:
      type: "object"
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: "array"
          items:
            $ref: "#/components/schemas/StackTraceElement"
    Register:
      type: "object"
      properties:
        email:
          type: "string"
        username:
          type: "string"
        role:
          type: "string"
          enum:
          - "USER"
          - "GAMEMASTER"
          - "ADMIN"
          - "OWNER"
      required:
      - "email"
      - "username"
      - "role"
    Invalid:
      type: "object"
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: "array"
          items:
            $ref: "#/components/schemas/StackTraceElement"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"
    SearchResult:
      type: "object"
      properties:
        score:
          type: "number"
          format: "double"
        id:
          type: "string"
        img:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
        description:
          type: "string"